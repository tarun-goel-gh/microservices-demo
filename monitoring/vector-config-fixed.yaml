apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-config
  namespace: monitoring
data:
  vector.yaml: |
    api:
      enabled: true
      address: "0.0.0.0:8686"
      playground: false

    sources:
      # Kubernetes logs from Promtail
      promtail_logs:
        type: "http"
        address: "0.0.0.0:8080"
        encoding:
          codec: "json"
      
      # Direct container logs
      container_logs:
        type: "kubernetes_logs"
        glob_minimum_cooldown_ms: 1000
        include_paths:
          - "/var/log/containers/*.log"
        exclude_paths:
          - "/var/log/containers/kube-system-*.log"
          - "/var/log/containers/monitoring-*.log"

    transforms:
      # Parse JSON logs
      parse_json:
        type: "remap"
        inputs: ["promtail_logs", "container_logs"]
        source: |
          if exists(.log) && is_string(.log) {
            parsed = parse_json!(.log)
            if is_object(parsed) {
              . = merge(., parsed)
            }
          }
      
      # Add Kubernetes metadata
      add_k8s_metadata:
        type: "remap"
        inputs: ["parse_json"]
        source: |
          if exists(.kubernetes) {
            .namespace = .kubernetes.namespace_name
            .pod_name = .kubernetes.pod_name
            .container_name = .kubernetes.container_name
            .labels = .kubernetes.pod_labels
          }
      
      # Add timestamp
      add_timestamp:
        type: "remap"
        inputs: ["add_k8s_metadata"]
        source: |
          if !exists(.timestamp) {
            .timestamp = now()
          }
      
      # Filter and route logs
      route_logs:
        type: "route"
        inputs: ["add_timestamp"]
        routes:
          application_logs: '.namespace == "ecomm-prod"'
          error_logs: 'exists(.level) && .level == "error"'
          access_logs: 'exists(.method) && exists(.status_code)'
          default: true

    sinks:
      # Send to Loki
      loki_logs:
        type: "loki"
        inputs: ["route_logs.application_logs", "route_logs.error_logs"]
        endpoint: "http://loki:3100"
        encoding:
          codec: "json"
        labels:
          namespace: "{{ namespace }}"
          pod_name: "{{ pod_name }}"
          container_name: "{{ container_name }}"
          level: "{{ level }}"
          service: "{{ service }}"
      
      # Send error logs to alerting (corrected format)
      error_alerts:
        type: "http"
        inputs: ["route_logs.error_logs"]
        uri: "http://alertmanager:9093/api/v1/alerts"
        encoding:
          codec: "json"
        headers:
          Content-Type: "application/json"
        method: "post"
        request:
          timeout_secs: 10
      
      # Send metrics to Prometheus (corrected endpoint)
      log_metrics:
        type: "prometheus_remote_write"
        inputs: ["route_logs"]
        endpoint: "http://prometheus:9090/api/v1/write"
        encoding:
          codec: "prometheus"
        request:
          timeout_secs: 10
        metrics:
          - name: "log_entries_total"
            type: "counter"
            inputs: ["route_logs"]
            labels:
              namespace: "{{ namespace }}"
              level: "{{ level }}"
              service: "{{ service }}"
          
          - name: "log_processing_duration_seconds"
            type: "histogram"
            inputs: ["route_logs"]
            labels:
              namespace: "{{ namespace }}"
              service: "{{ service }}"
      
      # Console output for debugging
      console:
        type: "console"
        inputs: ["route_logs.error_logs"]
        encoding:
          codec: "json"
        target: "stdout" 